{
    "sourceFile": "src/components/Todo/TodoInput.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1695627812731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695642993696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import classes from './TodoInput.module.css';\r\n \r\n-import { useState, useEffect } from 'react';\r\n+import { useState } from 'react';\r\n import { useDispatch } from 'react-redux';\r\n import { todosActions } from '../../store';\r\n \r\n import TodoError from './TodoError';\r\n"
                },
                {
                    "date": 1695645542359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n \tconst dispatch = useDispatch();\r\n \tconst [inputValue, setInputValue] = useState('');\r\n \tconst [isEmpty, setIsEmpty] = useState(true);\r\n \tconst [isTouched, setIsTouched] = useState(false);\r\n+\t\r\n \r\n \tconst onChangeHandler = e => {\r\n \t\tsetInputValue(e.target.value);\r\n \t\tsetIsTouched(true);\r\n"
                },
                {
                    "date": 1695645548031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import classes from './TodoInput.module.css';\r\n+\r\n+import { useState } from 'react';\r\n+import { useDispatch } from 'react-redux';\r\n+import { todosActions } from '../../store';\r\n+\r\n+import TodoError from './TodoError';\r\n+\r\n+const TodoInput = () => {\r\n+\tconst dispatch = useDispatch();\r\n+\tconst filter = useSelector(state => state.filter);\r\n+\tconst [inputValue, setInputValue] = useState('');\r\n+\tconst [isEmpty, setIsEmpty] = useState(true);\r\n+\tconst [isTouched, setIsTouched] = useState(false);\r\n+\r\n+\r\n+\tconst onChangeHandler = e => {\r\n+\t\tsetInputValue(e.target.value);\r\n+\t\tsetIsTouched(true);\r\n+\t\te.target.value === '' ? setIsEmpty(true) : setIsEmpty(false);\r\n+\t};\r\n+\r\n+\tconst addTodoHandler = e => {\r\n+\t\te.preventDefault();\r\n+\r\n+\t\tconst enteredTodo = inputValue;\r\n+\r\n+\t\tif (enteredTodo === '') {\r\n+\t\t\tsetIsEmpty(true);\r\n+\t\t\tsetIsTouched(true);\r\n+\t\t\treturn;\r\n+\t\t}\r\n+\r\n+\t\tdispatch(todosActions.addTodo(enteredTodo));\r\n+\r\n+\t\tsetInputValue('');\r\n+\t\tsetIsTouched(false);\r\n+\t};\r\n+\r\n+\treturn (\r\n+\t\t<form className={classes.form} onSubmit={addTodoHandler}>\r\n+\t\t\t{isEmpty && isTouched && <TodoError />}\r\n+\t\t\t<label htmlFor=\"todo-input\" className={classes.label}></label>\r\n+\t\t\t<input\r\n+\t\t\t\ttype=\"text\"\r\n+\t\t\t\tid=\"todo-input\"\r\n+\t\t\t\tplaceholder=\"Create a new todo...\"\r\n+\t\t\t\tclassName={classes[`input`]}\r\n+\t\t\t\tvalue={inputValue}\r\n+\t\t\t\tonChange={onChangeHandler}\r\n+\t\t\t/>\r\n+\t\t</form>\r\n+\t);\r\n+};\r\n+\r\n+export default TodoInput;\r\n"
                },
                {
                    "date": 1695645560377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import classes from './TodoInput.module.css';\r\n+\r\n+import { useState } from 'react';\r\n+import { useDispatch, useSelector } from 'react-redux';\r\n+import { todosActions } from '../../store';\r\n+\r\n+import TodoError from './TodoError';\r\n+\r\n+const TodoInput = () => {\r\n+\tconst dispatch = useDispatch();\r\n+\tconst filter = useSelector(state => state.filter);\r\n+\tconst [inputValue, setInputValue] = useState('');\r\n+\tconst [isEmpty, setIsEmpty] = useState(true);\r\n+\tconst [isTouched, setIsTouched] = useState(false);\r\n+\r\n+\tconst onChangeHandler = e => {\r\n+\t\tsetInputValue(e.target.value);\r\n+\t\tsetIsTouched(true);\r\n+\t\te.target.value === '' ? setIsEmpty(true) : setIsEmpty(false);\r\n+\t};\r\n+\r\n+\tconst addTodoHandler = e => {\r\n+\t\te.preventDefault();\r\n+\r\n+\t\tconst enteredTodo = inputValue;\r\n+\r\n+\t\tif (enteredTodo === '') {\r\n+\t\t\tsetIsEmpty(true);\r\n+\t\t\tsetIsTouched(true);\r\n+\t\t\treturn;\r\n+\t\t}\r\n+\r\n+\t\tdispatch(todosActions.addTodo(enteredTodo));\r\n+\t\t\r\n+\r\n+\t\tsetInputValue('');\r\n+\t\tsetIsTouched(false);\r\n+\t};\r\n+\r\n+\treturn (\r\n+\t\t<form className={classes.form} onSubmit={addTodoHandler}>\r\n+\t\t\t{isEmpty && isTouched && <TodoError />}\r\n+\t\t\t<label htmlFor=\"todo-input\" className={classes.label}></label>\r\n+\t\t\t<input\r\n+\t\t\t\ttype=\"text\"\r\n+\t\t\t\tid=\"todo-input\"\r\n+\t\t\t\tplaceholder=\"Create a new todo...\"\r\n+\t\t\t\tclassName={classes[`input`]}\r\n+\t\t\t\tvalue={inputValue}\r\n+\t\t\t\tonChange={onChangeHandler}\r\n+\t\t\t/>\r\n+\t\t</form>\r\n+\t);\r\n+};\r\n+\r\n+export default TodoInput;\r\n"
                },
                {
                    "date": 1695645573679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n \t\t\treturn;\r\n \t\t}\r\n \r\n \t\tdispatch(todosActions.addTodo(enteredTodo));\r\n-\t\tdispatch(todosActions.)\r\n+\t\tdispatch(todosActions.filterTodos(filter))\r\n \r\n \t\tsetInputValue('');\r\n \t\tsetIsTouched(false);\r\n \t};\r\n"
                },
                {
                    "date": 1695645904165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,55 @@\n+import classes from './TodoInput.module.css';\r\n+\r\n+import { useState } from 'react';\r\n+import { useDispatch, useSelector } from 'react-redux';\r\n+import { todosActions } from '../../store';\r\n+\r\n+import TodoError from './TodoError';\r\n+\r\n+const TodoInput = () => {\r\n+\tconst dispatch = useDispatch();\r\n+\tconst filter = useSelector(state => state.filter);\r\n+\tconst [inputValue, setInputValue] = useState('');\r\n+\tconst [isEmpty, setIsEmpty] = useState(true);\r\n+\tconst [isTouched, setIsTouched] = useState(false);\r\n+\r\n+\tconst onChangeHandler = e => {\r\n+\t\tsetInputValue(e.target.value);\r\n+\t\tsetIsTouched(true);\r\n+\t\te.target.value === '' ? setIsEmpty(true) : setIsEmpty(false);\r\n+\t};\r\n+\r\n+\tconst addTodoHandler = e => {\r\n+\t\te.preventDefault();\r\n+\r\n+\t\tconst enteredTodo = inputValue;\r\n+\r\n+\t\tif (enteredTodo === '') {\r\n+\t\t\tsetIsEmpty(true);\r\n+\t\t\tsetIsTouched(true);\r\n+\t\t\treturn;\r\n+\t\t}\r\n+\r\n+\t\tdispatch(todosActions.addTodo(enteredTodo));\r\n+\r\n+\t\tsetInputValue('');\r\n+\t\tsetIsTouched(false);\r\n+\t};\r\n+\r\n+\treturn (\r\n+\t\t<form className={classes.form} onSubmit={addTodoHandler}>\r\n+\t\t\t{isEmpty && isTouched && <TodoError />}\r\n+\t\t\t<label htmlFor=\"todo-input\" className={classes.label}></label>\r\n+\t\t\t<input\r\n+\t\t\t\ttype=\"text\"\r\n+\t\t\t\tid=\"todo-input\"\r\n+\t\t\t\tplaceholder=\"Create a new todo...\"\r\n+\t\t\t\tclassName={classes[`input`]}\r\n+\t\t\t\tvalue={inputValue}\r\n+\t\t\t\tonChange={onChangeHandler}\r\n+\t\t\t/>\r\n+\t\t</form>\r\n+\t);\r\n+};\r\n+\r\n+export default TodoInput;\r\n"
                }
            ],
            "date": 1695627812731,
            "name": "Commit-0",
            "content": "import classes from './TodoInput.module.css';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { todosActions } from '../../store';\r\n\r\nimport TodoError from './TodoError';\r\n\r\nconst TodoInput = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\tconst [isEmpty, setIsEmpty] = useState(true);\r\n\tconst [isTouched, setIsTouched] = useState(false);\r\n\r\n\tconst onChangeHandler = e => {\r\n\t\tsetInputValue(e.target.value);\r\n\t\tsetIsTouched(true);\r\n\t\te.target.value === '' ? setIsEmpty(true) : setIsEmpty(false);\r\n\t};\r\n\r\n\tconst addTodoHandler = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst enteredTodo = inputValue;\r\n\r\n\t\tif (enteredTodo === '') {\r\n\t\t\tsetIsEmpty(true);\r\n\t\t\tsetIsTouched(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdispatch(todosActions.addTodo(enteredTodo));\r\n\r\n\t\tsetInputValue('');\r\n\t\tsetIsTouched(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className={classes.form} onSubmit={addTodoHandler}>\r\n\t\t\t{isEmpty && isTouched && <TodoError />}\r\n\t\t\t<label htmlFor=\"todo-input\" className={classes.label}></label>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tid=\"todo-input\"\r\n\t\t\t\tplaceholder=\"Create a new todo...\"\r\n\t\t\t\tclassName={classes[`input`]}\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default TodoInput;\r\n"
        }
    ]
}